Note :- whenever we write a Queries it is must to end with semicolon[;] at the end of our Query
=============================================================================

create database [db-name] => this query is used for creating a database.

syntax example :- create database mydata; 
                // [enter] your database will be create.
=============================================================================

use [db-name] -> this is used for get into the database;

example :- we have already a database which we created before now we want to goes into the data base and sees what's in there,
           then we use 
                    syntax :- use mydata;
                    //now we are in databse which name is mydata and now we can perform operation,
=============================================================================

drop database [db-name] :- it is used for delete a database which we want to delete;

syntax example :- drop database mydata;
                  // now mydata is deleted.
=============================================================================

show databases :- it is used for show all databases which we have

syntax example :- show databases;
=============================================================================

create table [table-name](col1, col2, col2 .......) -> it is used for createing tales;

syntax example :-  create table mytable(faculty varchar(10) not null, id int(10) primary key not
null, name varchar(20) not null  );

varchar is uesd for strings;
int is for Numbers;
not null is used for we dont want to empty a column 

all this things with parentheses () is for giving the limit letsay varchar(10) now faculty have a limit now you cannot write more then 10 words
=============================================================================

show tables -> it is used for show all tabled which is created;

syntax :- show tables;
=============================================================================

desc mytable -> it is used for sees the rows of table not the inserted values.

syntax :-
          desc mydata;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| rollno  | int         | NO   |     | NULL    |       |
| sub     | varchar(10) | NO   |     | NULL    |       |
| country | varchar(10) | YES  |     | NULL    |       |
| name    | varchar(10) | YES  |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
=============================================================================

drop table -> it is used for delete a table;

syntax :- drop table mytable;
=============================================================================

alter table [old-table-name] -> it is used to update the table name;

syntax :- alter table [mytable] rename to [newtable];
=============================================================================

insert into [table-name]() values() -> it is used for inserting the values in tables.

syntax :- insert into mytable(rollno, sub, country, name) values(11, 'mca', 'china', 'ayaad');
syntax :- insert into mytable values(11, 'mca', 'china', 'ayaad');
//both are correct syntaxes.
=============================================================================

truncate table [table-name] -> it is use for remove all data of table.

syntax :- alter table mytable;
=============================================================================

alter table [table-name] add col1 -> it is  used for add columns in the table.

suntax :-
            alter table mytable add hobbies;

=============================================================================
update [table-name] set [column-name]=value ,[column-name]=value where col=value -> it used for fill the value which null and update the value which we want

syntax :- 
            update mytable set hobbies='gaming' where rollno=11;
==============================================================================

delete from [table_name] where col=value; -> it is used for delet the column which we pass it to;

syntax :- delete from mytable where column=value;
==============================================================================
Note :- (*) asterisc means all.
select * from table-name -> it use to print data of table;

syntax :- select * from table-name
+---------+----+------+
| faculty | id | name |
+---------+----+------+
| bca     |  1 | khan |
+---------+----+------+
==============================================================================
select value from table-name :- we can use field name as well;

syntax :- select name,sub from sectable;
+--------+-----+
| name   | sub |
+--------+-----+
| ayaad  | mca |
| alex   | mca |
| khan   | mca |
| yasar  | mca |
| khalid | mca |
==============================================================================
select * from sectable where country="india" -> in this case we are useing where       clause for gave the condition we want countries which is india

syntax :- select * from sectable where country="india";
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     15 | mca | india   | yasar  |
|     14 | mca | india   | khalid |
+--------+-----+---------+--------+
==============================================================================

conditional operator -> when we want to value greater than this and lower than that value. it will gave you perfect output what we want.

syntax :-  select * from table-name where rollno > 11 and rollno < 15;
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     12 | mca | japan   | alex   |
|     13 | mca | japan   | khan   |
|     14 | mca | india   | khalid |
==============================================================================

beyween clause -> it is used to gave the output like conditional operator
                  
syntax :- select * from sectable where rollno between 12 and 14;
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     12 | mca | japan   | alex   |
|     13 | mca | japan   | khan   |
|     14 | mca | india   | khalid |
+--------+-----+---------+--------+


==============================================================================
 select name as 'username' , sub as 'course' from table-name ->  we gave a new name to new table which we are printing but in this case it will not reflect to original table names it create a new table which is updated names of field.

syntax :-  select name as 'username' , sub as 'course' from sectable;
+----------+--------+
| username | course |
+----------+--------+
| ayaad    | mca    |
| alex     | mca    |
| khan     | mca    |
| yasar    | mca    |
| khalid   | mca    |
+----------+--------+
==============================================================================
distinct() -> if we have multiple same name in column it will return only once;
example: india, india, india, china, china, usa // output = india china usa.

syntax :- select distinct(country) from sectable;
+---------+
| country |
+---------+
| china   |
| japan   |
| india   |
+---------+

==============================================================================
and & or clause ->  and check both condition with where clause and or check only one.

syntax :- select * from sectable where country='india' and sub='phd';

mysql> select * from sectable where sub='phd' or  country='india';
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     11 | phd | china   | ayaad  |
|     13 | phd | japan   | khan   |
|     15 | mca | india   | yasar  |
|     14 | mca | india   | khalid |
+--------+-----+---------+--------+
==============================================================================
in() -> it is gave the row of table which we pass into.

syntax :- select * from sectable where rollno in(13, 15);
+--------+-----+---------+-------+
| rollno | sub | country | name  |
+--------+-----+---------+-------+
|     13 | phd | japan   | khan  |
|     15 | mca | india   | yasar |
+--------+-----+---------+-------+
==============================================================================
or clause -> it is same as in clause but it has a dfferent syntx

syntax :- select * from sectable where rollno=11 or  rollno=15 or rollno=14;
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     11 | phd | china   | ayaad  |
|     15 | mca | india   | yasar  |
|     14 | mca | india   | khalid |
+--------+-----+---------+--------+
==============================================================================
limit clause ->  if we want to first two rows data then use this.

syntax :- select * from sectable limit 2;
+--------+-----+---------+-------+
| rollno | sub | country | name  |
+--------+-----+---------+-------+
|     11 | phd | china   | ayaad |
|     12 | mca | japan   | alex  |
+--------+-----+---------+-------+
==============================================================================
offset clause -> offeset will skip the starting 2 rows and limit will gave 3 and 4 rows

syntax :- select * from sectable limit 2 offset 2;
+--------+-----+---------+-------+
| rollno | sub | country | name  |
+--------+-----+---------+-------+
|     13 | phd | japan   | khan  |
|     15 | mca | india   | yasar |
+--------+-----+---------+-------+
==============================================================================
order clause -> it is use to ascending order and descending order values;

syntax :- select * from sectable order by rollno;// this is for ascending order
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     11 | phd | china   | ayaad  |
|     12 | mca | japan   | alex   |
|     13 | phd | japan   | khan   |
|     14 | mca | india   | khalid |
|     15 | mca | india   | yasar  |
+--------+-----+---------+--------+

syntax for descending :- select * from sectable order by rollno desc;// use desc 
                                                                    for descending order
+--------+-----+---------+--------+
| rollno | sub | country | name   |
+--------+-----+---------+--------+
|     15 | mca | india   | yasar  |
|     14 | mca | india   | khalid |
|     13 | phd | japan   | khan   |
|     12 | mca | japan   | alex   |
|     11 | phd | china   | ayaad  |
+--------+-----+---------+--------+

==============================================================================
math clause -> these are the math clauses for performing math operations

syntax :- select sum(rollno) as 'total sallery' from sectable;
+---------------+
| total sallery |
+---------------+
|            65 |
+---------------+
1 row in set (0.00 sec)

syntax :- select avg(rollno) as 'avg' from sectable;
+---------+
| avg     |
+---------+
| 13.0000 |
+---------+
1 row in set (0.00 sec)


syntax :- select min(rollno) as 'min' from sectable;
+------+
| min  |
+------+
|   11 |
+------+
1 row in set (0.01 sec)

syntax :- select max(rollno) as 'max' from sectable;
+------+
| max  |
+------+
|   15 |
+------+
==============================================================================
Note :- '_' underscore means skip a single characte/number.
like operator/clause -> This use of % in SQL allows you to perform flexible searches within text fields, making it a powerful tool for querying data in a database.

syntax :-  select * from sectable where name like '_a%';// it means give the value name which is seciond character is a [_a%] first character is not checked bcz we want second value.

mysql> select * from sectable where name like 'a%';
+--------+-----+---------+-------+
| rollno | sub | country | name  |
+--------+-----+---------+-------+
|     11 | phd | china   | ayaad |
|     12 | mca | japan   | alex  |
+--------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> select * from sectable where name like '%a_';
+--------+-----+---------+-------+
| rollno | sub | country | name  |
+--------+-----+---------+-------+
|     11 | phd | china   | ayaad |
|     13 | phd | japan   | khan  |
|     15 | mca | india   | yasar |
+--------+-----+---------+-------+
